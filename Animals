
abstract class Animals implements Comparable<Animals>{
    private final int id;
    private double height;
    private Supervisor supervisor;

    public Animals(int id, double height) {
        this.id = id;
        this.height = height;
    }

    public int findId() {
        return id;
    }

    public double findHeight() {
        return height;
    }

    public boolean canMakeSound() {
        return true;
    }

    public void makeSound() {
    }

    @Override
    public int compareTo(Animals other) {
        return Integer.compare(this.id, other.id);
    }

    public Supervisor findSupervisor() {

        return supervisor;
    }

    public void updateSupervisor(Supervisor supervisor) {
        this.supervisor = supervisor;
    }
}

class Cat extends Animals {
    public Cat(int id, double height) {

        super(id, height);
    }

    @Override
    public void makeSound() {
        System.out.println("MeowMeow");
    }
}

class Dog extends Animals {
    public Dog(int id, double height) {

        super(id, height);
    }

    @Override
    public void makeSound() {
        System.out.println("WoofWoof");
    }
}

class Hippo extends Animals {
    public Hippo(int id, double height) {
        super(id, height);
    }

    @Override
    public void makeSound() {
        System.out.println("HippoHippo");
    }
}

class Horse extends Animals {
    public Horse(int id, double height) {
        super(id, height);
    }

    @Override
    public void makeSound() {
        System.out.println("NeighHorse");
    }
}

class Fish extends Animals {
    public Fish(int id, double height) {
        super(id, height);
    }
    @Override
    public boolean canMakeSound() {
        return false;
    }

}
